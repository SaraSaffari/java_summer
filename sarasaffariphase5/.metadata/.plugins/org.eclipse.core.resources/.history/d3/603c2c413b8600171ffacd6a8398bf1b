package services;

import java.io.BufferedReader;
//import java.io.BufferedWriter;
import java.io.FileReader;
//import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Vector;
import entities.*;

public class SchoolService{
	//fields
	private Vector<School> allSchools;
	
	//constructors
	public SchoolService (){
		allSchools = new Vector<School>(); 
	}
	//methods
	//note : the two methods(sorting hat and school) was for phase4 so there are't here...
	public void getData(String filename) throws IOException{
		
		String line;
        BufferedReader in;

        in = new BufferedReader(new FileReader(filename));
        line = in.readLine();

        while(line != "$") //finish condition- $ means end of file
        {
        	line = in.readLine(); //getting school name
        	String schoolName = "";
        	schoolName = line;
        	 
        	line = in.readLine(); //getting school's houses
        	int numberOfHouses = -1;
        	boolean housed = true;
        	numberOfHouses = Integer.parseInt(line);
        	ArrayList<House> _houses = new ArrayList<House>();
        	 
        	if (line != "N/A") {
        		for(; numberOfHouses > 0; numberOfHouses--){
        			line = in.readLine();
        			_houses.add(new House(line));
        		}
        	}
        	if(_houses.size() == 0){
        		housed = false;
        	}
        		
        	line = in.readLine(); //getting school's students
        	int numberOfStudents = -1;
        	numberOfStudents = Integer.parseInt(line);
        	Vector<Student> _students = new Vector<Student>();
        	  
        	if (line != "N/A") {
        		for(;numberOfStudents > 0; numberOfStudents--){
        			line = in.readLine();
        			_students.add(new Student(line));
        		 }
        	}
        
        	line = in.readLine(); //getting school's professors
        	int numberOfProfessors = -1;
        	numberOfProfessors = Integer.parseInt(line);
        	Vector<Professor> _professors =new Vector<Professor>();
         
        	if (line != "N/A") {
        		for(;numberOfProfessors > 0; numberOfProfessors--){
    			 line = in.readLine();
    			 _professors.add(new Professor(line));
    			}
        	}
        	 
        	line = in.readLine(); //getting school's courses
        	int numberOfCourses = -1;
        	numberOfCourses = Integer.parseInt(line);
        	ArrayList<Course> _courses= new ArrayList<Course>();
        	 
        	if (line != "N/A") {
        		for(; numberOfCourses >0; numberOfCourses--){
        			line = in.readLine();
        			_courses.add(new Course(line));
        		}
        	}

        	line = in.readLine(); //getting school's location
        	String location = "";
        	location = line;
        	 
        	line = in.readLine(); //to get rid of * at the end of each school
        	 
        	School newSchool = new School(schoolName, numberOfStudents,  housed, _houses, _students, _professors, _courses, location);
        	allSchools.add(newSchool);
        	in.close();
        }
    }
	
	/*public void setData(){
		BufferedWriter out = null;
		try  
		{
		    FileWriter fstream = new FileWriter("out.txt", true); //true tells to append data.
		    out = new BufferedWriter(fstream);
		    out.write("\nsue");
		}
		catch (IOException e)
		{
		    System.err.println("Error: " + e.getMessage());
		}
		finally
		{
		    if(out != null) {
		        out.close();
		    }
		}
	}*/
}